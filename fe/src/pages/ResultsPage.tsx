import React, { useEffect, useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { 
  BarChart3, 
  AlertTriangle, 
  CheckCircle, 
  Info, 
  Heart,
  Stethoscope,
  Calendar,
  ArrowLeft,
  Download,
  Share2,
  Brain,
  Activity
} from 'lucide-react';
import { PredictionResponse } from '../services/api';

interface AssessmentData {
  serumCreatinine: string;
  gfr: string;
  itching: string;
  fastingBloodSugar: string;
  bunLevels: string;
  proteinInUrine: string;
  systolicBP: string;
  muscleCramps: string;
  serumElectrolytesSodium: string;
  socioeconomicStatus: string;
}

export const ResultsPage: React.FC = () => {
  const navigate = useNavigate();
  const [assessmentData, setAssessmentData] = useState<AssessmentData | null>(null);
  const [prediction, setPrediction] = useState<PredictionResponse | null>(null);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const storedData = localStorage.getItem('assessmentData');
    const storedPrediction = localStorage.getItem('predictionResults');
    
    if (!storedData || !storedPrediction) {
      navigate('/assessment');
      return;
    }

    try {
      const data = JSON.parse(storedData) as AssessmentData;
      const predictionData = JSON.parse(storedPrediction) as PredictionResponse;
      
      setAssessmentData(data);
      setPrediction(predictionData);
    } catch (error) {
      console.error('Error parsing stored data:', error);
      navigate('/assessment');
      return;
    }
    
    setIsLoading(false);
  }, [navigate]);

  const getRiskColor = (riskLevel: string) => {
    switch (riskLevel) {
      case 'Low': return 'text-green-700 bg-green-100 border-green-200';
      case 'Moderate': return 'text-yellow-700 bg-yellow-100 border-yellow-200';
      case 'High': return 'text-orange-700 bg-orange-100 border-orange-200';
      case 'Very High': return 'text-red-700 bg-red-100 border-red-200';
      default: return 'text-gray-700 bg-gray-100 border-gray-200';
    }
  };

  const getRiskIcon = (riskLevel: string) => {
    switch (riskLevel) {
      case 'Low': return CheckCircle;
      case 'Moderate': return Info;
      case 'High': return AlertTriangle;
      case 'Very High': return AlertTriangle;
      default: return Info;
    }
  };

  const downloadReport = () => {
    if (!prediction || !assessmentData) return;
    
    const reportData = {
      timestamp: new Date().toISOString(),
      assessment: assessmentData,
      prediction: prediction,
      disclaimer: 'This report is generated by a machine learning model for educational purposes only. Always consult healthcare professionals for medical decisions.'
    };
    
    const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `kidney-disease-assessment-${new Date().toISOString().split('T')[0]}.json`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  if (isLoading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-slate-600">Loading ML prediction results...</p>
        </div>
      </div>
    );
  }

  if (!assessmentData || !prediction) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <AlertTriangle className="h-12 w-12 text-red-500 mx-auto mb-4" />
          <p className="text-slate-600">Error loading results. Please try again.</p>
          <Link to="/assessment" className="text-blue-600 hover:text-blue-700 mt-2 inline-block">
            Return to Assessment
          </Link>
        </div>
      </div>
    );
  }

  const RiskIcon = getRiskIcon(prediction.prediction.risk_level);

  return (
    <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div className="mb-8">
        <Link
          to="/assessment"
          className="inline-flex items-center text-blue-600 hover:text-blue-700 font-medium"
        >
          <ArrowLeft className="h-4 w-4 mr-2" />
          Back to Assessment
        </Link>
      </div>

      <div className="text-center mb-12">
        <div className="flex justify-center mb-6">
          <div className="p-4 bg-gradient-to-r from-blue-600 to-teal-600 rounded-2xl">
            <BarChart3 className="h-8 w-8 text-white" />
          </div>
        </div>
        <h1 className="text-3xl font-bold text-slate-800 mb-4">ML Assessment Results</h1>
        <p className="text-lg text-slate-600">
          Machine learning analysis of your kidney health indicators
        </p>
        <div className="flex items-center justify-center mt-4 text-sm text-slate-500">
          <Brain className="h-4 w-4 mr-2" />
          Powered by Random Forest Classifier
        </div>
      </div>

      {/* Risk Assessment Card */}
      <div className="bg-white rounded-2xl shadow-sm border border-slate-200 p-8 mb-8">
        <div className="text-center mb-8">
          <div className={`inline-flex items-center px-6 py-3 rounded-full border-2 ${getRiskColor(prediction.prediction.risk_level)} mb-4`}>
            <RiskIcon className="h-6 w-6 mr-2" />
            <span className="text-xl font-bold">{prediction.prediction.risk_level} Risk</span>
          </div>
          <div className="space-y-2">
            <p className="text-3xl font-bold text-slate-800">
              {(prediction.prediction.probability * 100).toFixed(1)}% Probability
            </p>
            <p className="text-lg text-slate-600">
              Estimated Stage: <span className="font-semibold">{prediction.prediction.ckd_stage}</span>
            </p>
            <p className="text-sm text-slate-500">
              CKD Status: <span className={`font-medium ${prediction.prediction.has_ckd ? 'text-red-600' : 'text-green-600'}`}>
                {prediction.prediction.has_ckd ? 'Positive Indicators' : 'Negative Indicators'}
              </span>
            </p>
          </div>
        </div>

        {/* Risk Level Bar */}
        <div className="mb-8">
          <div className="flex justify-between text-sm text-slate-600 mb-2">
            <span>Low Risk</span>
            <span>Very High Risk</span>
          </div>
          <div className="w-full bg-gray-200 rounded-full h-4">
            <div
              className={`h-4 rounded-full ${
                prediction.prediction.risk_level === 'Low' ? 'bg-green-500' :
                prediction.prediction.risk_level === 'Moderate' ? 'bg-yellow-500' :
                prediction.prediction.risk_level === 'High' ? 'bg-orange-500' : 'bg-red-500'
              }`}
              style={{ width: `${prediction.prediction.probability * 100}%` }}
            ></div>
          </div>
        </div>

        {/* Model Information */}
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
          <div className="flex items-center text-blue-800 mb-2">
            <Activity className="h-5 w-5 mr-2" />
            <span className="font-medium">Model Information</span>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-blue-700">
            <div>
              <span className="font-medium">Model Version:</span> {prediction.metadata.model_version}
            </div>
            <div>
              <span className="font-medium">Analysis Time:</span> {new Date(prediction.metadata.timestamp).toLocaleString()}
            </div>
            <div>
              <span className="font-medium">Features Used:</span> {prediction.metadata.features_used.length} parameters
            </div>
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
        {/* Key Risk Factors */}
        <div className="bg-white rounded-2xl shadow-sm border border-slate-200 p-6">
          <div className="flex items-center mb-6">
            <div className="p-3 bg-red-100 rounded-lg mr-4">
              <AlertTriangle className="h-6 w-6 text-red-600" />
            </div>
            <h2 className="text-xl font-bold text-slate-800">Key Risk Factors</h2>
          </div>
          {prediction.analysis.key_factors.length > 0 ? (
            <div className="space-y-3">
              {prediction.analysis.key_factors.map((factor, index) => (
                <div key={index} className="flex items-start">
                  <div className="w-2 h-2 bg-red-500 rounded-full mt-2 mr-3 flex-shrink-0"></div>
                  <p className="text-slate-700">{factor}</p>
                </div>
              ))}
            </div>
          ) : (
            <p className="text-green-700 bg-green-50 p-4 rounded-lg">
              No significant risk factors identified in your assessment.
            </p>
          )}
        </div>

        {/* Medical Recommendations */}
        <div className="bg-white rounded-2xl shadow-sm border border-slate-200 p-6">
          <div className="flex items-center mb-6">
            <div className="p-3 bg-blue-100 rounded-lg mr-4">
              <Stethoscope className="h-6 w-6 text-blue-600" />
            </div>
            <h2 className="text-xl font-bold text-slate-800">ML-Generated Recommendations</h2>
          </div>
          <div className="space-y-3">
            {prediction.analysis.recommendations.map((recommendation, index) => (
              <div key={index} className="flex items-start">
                <div className="w-2 h-2 bg-blue-500 rounded-full mt-2 mr-3 flex-shrink-0"></div>
                <p className="text-slate-700">{recommendation}</p>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Next Steps */}
      <div className="bg-gradient-to-r from-blue-600 to-teal-600 rounded-2xl p-8 text-white mb-8">
        <div className="flex items-center mb-6">
          <div className="p-3 bg-white/20 rounded-lg mr-4">
            <Calendar className="h-6 w-6 text-white" />
          </div>
          <h2 className="text-2xl font-bold">Recommended Next Steps</h2>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-white/10 rounded-lg p-4">
            <h3 className="font-semibold mb-2">Immediate Actions</h3>
            <ul className="space-y-1 text-blue-100">
              <li>• Schedule appointment with healthcare provider</li>
              <li>• Bring these ML results to your consultation</li>
              <li>• Request comprehensive kidney function tests</li>
              <li>• Discuss model predictions with your doctor</li>
            </ul>
          </div>
          <div className="bg-white/10 rounded-lg p-4">
            <h3 className="font-semibold mb-2">Ongoing Monitoring</h3>
            <ul className="space-y-1 text-blue-100">
              <li>• Track blood pressure and blood sugar daily</li>
              <li>• Schedule regular follow-up assessments</li>
              <li>• Monitor symptoms and report changes</li>
              <li>• Consider repeat ML assessments quarterly</li>
            </ul>
          </div>
        </div>
      </div>

      {/* Action Buttons */}
      <div className="flex flex-col sm:flex-row gap-4 justify-center">
        <button 
          onClick={downloadReport}
          className="inline-flex items-center px-6 py-3 bg-white border border-slate-300 text-slate-700 rounded-lg hover:bg-slate-50 transition-colors"
        >
          <Download className="h-5 w-5 mr-2" />
          Download ML Report
        </button>
        <button className="inline-flex items-center px-6 py-3 bg-white border border-slate-300 text-slate-700 rounded-lg hover:bg-slate-50 transition-colors">
          <Share2 className="h-5 w-5 mr-2" />
          Share with Doctor
        </button>
        <Link
          to="/assessment"
          className="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-teal-600 text-white rounded-lg hover:from-blue-700 hover:to-teal-700 transition-all"
        >
          <Heart className="h-5 w-5 mr-2" />
          New Assessment
        </Link>
      </div>

      {/* Medical Disclaimer */}
      <div className="bg-amber-50 border border-amber-200 rounded-lg p-6 mt-8">
        <div className="flex items-start">
          <AlertTriangle className="h-5 w-5 text-amber-600 mt-0.5 mr-3" />
          <div className="text-sm text-amber-800">
            <p className="font-semibold mb-2">Important ML Model Disclaimer:</p>
            <p>
              This assessment is generated by a Random Forest machine learning model trained on medical data 
              for educational and screening purposes only. The model provides probabilistic predictions based 
              on input parameters but should not be used as a substitute for professional medical advice, 
              diagnosis, or treatment. Always consult with qualified healthcare providers regarding your 
              medical condition and before making any healthcare decisions based on these ML results.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};